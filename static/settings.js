
let particlesLoaded = false; // Variable to track if particles are loaded

// Function to handle tab switching
function switchTab(tabName) {
  const contents = document.querySelectorAll('.tab-content');
  contents.forEach(content => content.classList.remove('active'));
  document.getElementById(`${tabName}Content`).classList.add('active');

  const buttons = document.querySelectorAll('.tab button');
  buttons.forEach(button => button.classList.remove('active'));
  document.getElementById(`${tabName}Tab`).classList.add('active');
}

document.getElementById('presetsTab').addEventListener('click', () => switchTab('presets'));
document.getElementById('uploadTab').addEventListener('click', () => switchTab('upload'));
document.getElementById('urlTab').addEventListener('click', () => switchTab('url'));

// Function to load particles.js when Preset 1 is selected
function loadParticlesJS() {
  if (particlesLoaded) return; // Prevent loading particles multiple times
  if (window.particlesJS) {
    particlesJS("mainContainer", {
      particles: {
        number: {
          value: 100
        },
        size: {
          value: 3
        },
        color: {
          value: "black"
        },
        move: {
          enable: true,
          speed: 3
        },
      }
    });
    particlesLoaded = true; // Mark particles as loaded
  }
}

// Function to unload particles.js
function unloadParticlesJS() {
  if (!particlesLoaded) return; // No need to unload if particles are not loaded
  const particlesElement = document.getElementById("mainContainer");
  if (particlesElement) {
    const canvas = particlesElement.querySelector("canvas");
    if (canvas) canvas.remove(); // Remove the canvas generated by particles.js
  }
  particlesLoaded = false;
}


// Handle Save settings
document.getElementById("saveSettings").addEventListener("click", () => {
  const activeTab = document.querySelector('.tab button.active').id; // Get active tab's id
  const bgImageInput = document.getElementById("bgImageInput");
  const bgImageUrl = document.getElementById("bgImageUrl").value;

  // Store current settings in localStorage
  localStorage.setItem('lastTab', activeTab);  // Save active tab
  localStorage.setItem('lastUrl', bgImageUrl); // Save URL input

  // Reset background image and unload particle script
  document.body.style.backgroundImage = "none";
  document.body.style.backgroundColor = "black"; // Reset background color
  unloadParticleScript();

  if (activeTab === "uploadTab" && bgImageInput.files.length > 0) {
    // Handle file upload for background image
    const reader = new FileReader();
    reader.onload = function (e) {
      // Save the background image data URL in localStorage
      localStorage.setItem('bgImageData', e.target.result);
      localStorage.removeItem('bgImageUrl');
      document.body.style.backgroundImage = `url(${e.target.result})`;
      document.body.style.backgroundSize = "cover";
      document.body.style.backgroundPosition = "center";
    };
    reader.readAsDataURL(bgImageInput.files[0]);
  } else if (activeTab === "urlTab" && bgImageUrl) {
    // Handle URL input for background image
    const formattedUrl = bgImageUrl.trim();
    if (formattedUrl && (formattedUrl.startsWith('http://') || formattedUrl.startsWith('https://'))) {
      // Save the URL in localStorage
      localStorage.setItem('bgImageUrl', formattedUrl);
      document.body.style.backgroundImage = `url(${formattedUrl})`;
      document.body.style.backgroundSize = "cover";
      localStorage.removeItem('bgImageData');
      document.body.style.backgroundPosition = "center";
    } else {
      alert("Please enter a valid URL starting with http:// or https://.");
    }
  }

  // Apply preset 1 settings (black background and load particle.js)
  if (activeTab === "preset1Tab") {
    document.body.style.backgroundColor = "black";
    localStorage.removeItem('bgImageData');
    localStorage.removeItem('bgImageUrl');
    loadParticleScript();
  }

  alert("Settings saved!");
});

// Load settings on page load
document.addEventListener("DOMContentLoaded", () => {
  // Load the last tab from localStorage
  const lastTab = localStorage.getItem("lastTab");
  if (lastTab) {
    switchTab(lastTab.replace('Tab', '').toLowerCase());
  }

  // Load the last URL and file input settings from localStorage
  const lastUrl = localStorage.getItem('lastUrl');
  const lastBgImageData = localStorage.getItem('bgImageData');

  // If there is a saved image URL or file data, apply it
  if (lastUrl) {
    document.body.style.backgroundImage = `url(${lastUrl})`;
    document.body.style.backgroundSize = "cover";
    document.body.style.backgroundPosition = "center";
  } else if (lastBgImageData) {
    // If there is a saved file data URL, apply it
    document.body.style.backgroundImage = `url(${lastBgImageData})`;
    document.body.style.backgroundSize = "cover";
    document.body.style.backgroundPosition = "center";
  }

  // Check if Preset 1 was last active, and apply its settings
  if (lastTab === "preset1Tab") {
    document.body.style.backgroundColor = "black";
    loadParticleScript();
  }
});

// Function to dynamically load the particle.js script
function loadParticleScript() {
  if (!document.getElementById("particleScript")) {
    const script = document.createElement('script');
    script.src = "/static/particle.js";
    script.id = "particleScript";
    document.head.appendChild(script);
  }
}

// Function to unload the particle.js script
function unloadParticleScript() {
  const script = document.getElementById("particleScript");
  if (script) {
    script.remove();
  }
}
// Function to reset all settings to default
document.getElementById("resetSettings").addEventListener("click", () => {
  if (confirm("Are you sure you want to reset all options to default? This cannot be undone.")) {
    // Clear all relevant localStorage keys
    localStorage.removeItem('lastTab');
    localStorage.removeItem('lastUrl');
    localStorage.removeItem('bgImageData');
    localStorage.removeItem('bgImageUrl');

    // Reset background to default
    document.body.style.backgroundImage = "none";
    document.body.style.backgroundColor = "black"; // Default background color

    // Unload particles.js script if loaded
    unloadParticleScript();

    // Reset the active tab to Presets (or any default tab)
    switchTab('presets');

    alert("All settings have been reset to default.");
  }
});
